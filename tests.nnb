{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst providers = await sdk.getProviders();\nconsole.log(providers);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst provider_settings = await sdk.getProviderSettings(\"openai\");\nconsole.log(provider_settings);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst embedding_providers = await sdk.getEmbedProviders();\nconsole.log(embedding_providers);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst extension_settings = await sdk.getExtensionSettings();\nconsole.log(extension_settings);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst agents = await sdk.getAgents();\nconsole.log(agents);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst agent_config = await sdk.getAgentConfig(\"OpenOrca\");\nconsole.log(agent_config);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Add Agent\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Rename Agent\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Update Agent Settings\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Update Agent Commands\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Delete Agent\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst conversations = await sdk.getConversations();\nconsole.log(conversations);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst conversation = await sdk.getConversation(\"gpt4free\", \"Test\", 100, 1);\n\nconsole.log(conversation);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// New Conversation\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Delete Conversation Message\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Delete Conversation\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Get Agent Memories\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Delete Agent Memory\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Wipe Agent Memories\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst prompts = await sdk.getPrompts();\nconsole.log(prompts);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst prompt_data = await sdk.getPrompt(\"Chat\");\nconsole.log(prompt_data);\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst chains = await sdk.getChains();\nconsole.log(chains);\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  'Smart Instruct',",
                                "  'Smart Prompt',",
                                "  'Test_Commands',",
                                "  'Generate and Run Smart Task Chain',",
                                "  'Write a Poem',",
                                "  'Generate and Run Task Chain',",
                                "  'Smart Chat - No Research',",
                                "  'Generate Task Chain',",
                                "  'Generate Smart Task Chain',",
                                "  'Smart Chat',",
                                "  'Ask Helper Agent for Help',",
                                "  'Generate Image with Stable Diffusion',",
                                "  'Generate Smart Task Chain without Research',",
                                "  'Generate Task Chain without Research',",
                                "  'Create New Command',",
                                "  'Solve Math Problem',",
                                "  'Smart Instruct - No Research'",
                                "]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst chain = await sdk.getChain(\"Smart Chat\");\nconsole.log(chain.steps);\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  {",
                                "    step: 1,",
                                "    agent_name: 'gpt4free',",
                                "    prompt_type: 'Prompt',",
                                "    prompt: {",
                                "      prompt_name: 'SmartChat-StepByStep',",
                                "      websearch: true,",
                                "      websearch_depth: 3,",
                                "      context_results: 5,",
                                "      shots: 3",
                                "    }",
                                "  },",
                                "  {",
                                "    step: 2,",
                                "    agent_name: 'gpt4free',",
                                "    prompt_type: 'Prompt',",
                                "    prompt: {",
                                "      prompt_name: 'SmartChat-Researcher',",
                                "      shot_count: '3',",
                                "      task: '{STEP1}'",
                                "    }",
                                "  },",
                                "  {",
                                "    step: 3,",
                                "    agent_name: 'gpt4free',",
                                "    prompt_type: 'Prompt',",
                                "    prompt: {",
                                "      prompt_name: 'SmartChat-Resolver',",
                                "      shot_count: '3',",
                                "      task: '{STEP2}'",
                                "    }",
                                "  }",
                                "]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst chain = await sdk.getChainArgs(\"Smart Chat\");\nconsole.log(chain);\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'user_input', 'shot_count', 'task' ]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst command_args = await sdk.getCommandArgs(\"Write to File\");\nconsole.log(command_args);\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{ filename: '', text: '' }",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import AGiXTSDK from \"./index.ts\";\nconst sdk = new AGiXTSDK({\n  baseUri: \"http://localhost:7437\",\n  apiKey: \"\",\n});\nconst prompt_args = await sdk.getPromptArgs(\"Chat\");\nconsole.log(prompt_args);\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'context', 'conversation_history', 'user_input' ]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}